{"version":3,"sources":["components/ContactList/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","exportModule","addContact","createAction","name","phone","payload","id","shortid","generate","deleteContact","changeFilter","contacts","createReducer","actions","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReduser","devTools","process","persistor","persistStore","getContacts","getFilter","getFilterContacts","normalizedFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setPhone","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","checkName","isfilterName","find","alert","className","s","form","onSubmit","preventDefault","formInner","label","type","onChange","required","formButton","ContactItem","map","contactItem","deleteButton","onClick","ContactList","contactList","Filter","filterLabel","filterText","Container","children","App","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.a92385a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__36LVS\",\"deleteButton\":\"ContactListItem_deleteButton__2hkuY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1n8O4\",\"filterText\":\"Filter_filterText__WDC7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2-_jN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1SsO4\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/add', (name, phone) => {\r\n  return {\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      phone,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/filter');\r\n\r\nconst exportModule = { addContact, deleteContact, changeFilter };\r\n\r\nexport default exportModule;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst initialState = [];\r\n\r\nconst contacts = createReducer(initialState, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReduser from './reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","const getContacts = state => state.contacts.contacts;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFilterContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nexport { getContacts, getFilter, getFilterContacts };\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getContacts } from '../../redux/selectors';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!checkName()) return;\n\n    dispatch(actions.addContact(name, phone));\n\n    resetForm();\n  };\n\n  const checkName = () => {\n    const isfilterName = !!contacts.find(contact => contact.name === name);\n    isfilterName && alert(`${name} is already in contacts`);\n    return !isfilterName;\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <div className={s.formInner}>\n        <label className={s.label}>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <label className={s.label}>\n          <span>Phone</span>\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            value={phone}\n            onChange={handleChange}\n            required\n          />\n        </label>\n      </div>\n\n      <button className={s.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getFilterContacts } from '../../redux/selectors';\nimport s from './ContactListItem.module.css';\n\nconst ContactItem = () => {\n  const contacts = useSelector(getFilterContacts);\n  const dispatch = useDispatch();\n\n  return contacts.map(({ id, name, phone }) => {\n    return (\n      <li key={id} className={s.contactItem}>\n        {name}: {phone}{' '}\n        <button\n          className={s.deleteButton}\n          type=\"button\"\n          onClick={() => dispatch(actions.deleteContact(id))}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  return (\n    <ul className={s.contactList}>\n      <ContactItem />\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filterLabel}>\n      <p className={s.filterText}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(actions.changeFilter(e.currentTarget.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.Container}>{children}</div>;\n};\n\nexport default Container;\n","import ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\n\nconst App = () => {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2ZXLE\",\"formInner\":\"ContactForm_formInner__A5ACC\",\"label\":\"ContactForm_label__WWL71\",\"formButton\":\"ContactForm_formButton__27Zfn\"};"],"sourceRoot":""}